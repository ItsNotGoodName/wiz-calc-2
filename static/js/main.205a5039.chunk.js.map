{"version":3,"sources":["components/Card/CardWrapper.tsx","constants.ts","components/Card/CardFooter.tsx","components/Card/CardHeader.tsx","components/Card/CardItem.tsx","components/LabelNumber.tsx","components/MainCard.tsx","components/OptionMenu.tsx","utils/parseNum.ts","hooks/UseSpell.tsx","utils/calculateDamage.ts","components/SpellCard.tsx","components/ToolBarCard.tsx","hooks/UseCharacter.tsx","utils/parseBuffs.ts","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["CardWrapper","children","props","Stack","spacing","boxShadow","border","borderRadius","borderColor","CardFooter","px","pb","pt","CardHeader","p","borderBottom","CardItem","mb","LabelNumber","Box","Text","Input","MainCard","character","dispatch","textAlign","fontSize","value","percentModifier","onChange","event","preventDefault","type","target","flatDamage","Textarea","height","resize","placeholder","buffsRaw","Button","onClick","mx","w","OptionMenu","id","deleteSpell","Menu","aria-label","size","parseNum","num","parseInt","dpsCalcAll","newState","i","bases","length","dpsCalc","index","enchantment","increment","base","pips","damages","buffs","dam","Math","floor","Number","calculateDamage","spellReducer","state","action","name","push","undefined","console","log","Error","SpellCard","initState","hook","React","useReducer","useEffect","useSpell","spell","Flex","mr","spellCheck","onFocus","select","pr","map","key","ml","flexWrap","wordBreak","my","fontWeight","toLocaleString","useGrouping","ToolbarCard","characterReducer","split","element","b","App","reducer","pierce","shields","sheldsRaw","useCharacter","setCharacter","useState","v4","spells","setSpells","indexOf","newSpells","spellCards","maxW","pl","py","Heading","color","float","minW","wrap","IconButton","variantColor","mt","icon","Boolean","window","location","hostname","match","customTheme","theme","ReactDOM","render","StrictMode","ThemeProvider","CSSReset","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.205a5039.chunk.js","sourcesContent":["import { Stack, StackProps } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { BORDER, BORDER_COLOR } from \"../../constants\";\ntype CardWrapperProps = {} & StackProps;\n\nexport const CardWrapper: React.FC<CardWrapperProps> = ({\n  children,\n  ...props\n}) => {\n  return (\n    <Stack\n      spacing=\"5px\"\n      boxShadow=\"md\"\n      border={BORDER}\n      borderRadius=\"10px\"\n      borderColor={BORDER_COLOR}\n      {...props}\n    >\n      {children}\n    </Stack>\n  );\n};\n","export const MAX_SPELLS = 12;\nexport const BORDER_COLOR = \"gray.300\";\nexport const BORDER = \"solid 3px\";\n","import { Stack, StackProps } from \"@chakra-ui/core\";\nimport React from \"react\";\ntype CardFooter = {} & StackProps;\n\nexport const CardFooter: React.FC<CardFooter> = ({ children, ...props }) => {\n  return (\n    <Stack spacing=\"10px\" px=\"10px\" pb=\"10px\" pt=\"5px\" {...props}>\n      {children}\n    </Stack>\n  );\n};\n","import { Stack, StackProps } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { BORDER, BORDER_COLOR } from \"../../constants\";\ntype CardHeader = {} & StackProps;\n\nexport const CardHeader: React.FC<CardHeader> = ({ children, ...props }) => {\n  return (\n    <Stack\n      p=\"10px\"\n      borderBottom={BORDER}\n      borderColor={BORDER_COLOR}\n      spacing=\"10px\"\n      {...props}\n    >\n      {children}\n    </Stack>\n  );\n};\n","import { BoxProps, Stack } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { BORDER, BORDER_COLOR } from \"../../constants\";\ntype CardItem = {} & BoxProps;\n\nexport const CardItem: React.FC<CardItem> = ({ children, ...props }) => {\n  return (\n    <Stack\n      spacing=\"5px\"\n      px=\"10px\"\n      pb=\"10px\"\n      mb=\"5px\"\n      borderBottom={BORDER}\n      borderColor={BORDER_COLOR}\n      {...props}\n    >\n      {children}\n    </Stack>\n  );\n};\n","import { Box, Input, InputProps, Text } from \"@chakra-ui/core\";\nimport React from \"react\";\n\nexport const LabelNumber: React.FC<InputProps> = ({ children, ...props }) => {\n  return (\n    <Box>\n      <Text>{children}</Text>\n      <Input {...props} />\n    </Box>\n  );\n};\n","import { Button, Text, Textarea } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { CharacterType } from \"../types\";\nimport { CardFooter } from \"./Card/CardFooter\";\nimport { CardHeader } from \"./Card/CardHeader\";\nimport { CardItem } from \"./Card/CardItem\";\nimport { CardWrapper } from \"./Card/CardWrapper\";\nimport { LabelNumber } from \"./LabelNumber\";\nimport { CharacterActions } from \"../hooks/UseCharacter\";\n\ntype MainCardProps = {\n  character: CharacterType;\n  dispatch: React.Dispatch<CharacterActions>;\n};\n\nexport const MainCard: React.FC<MainCardProps> = ({ character, dispatch }) => {\n  return (\n    <CardWrapper>\n      <CardHeader>\n        <Text textAlign=\"center\" fontSize=\"20px\">\n          Character Stats\n        </Text>\n      </CardHeader>\n      <CardItem>\n        <LabelNumber\n          value={character.percentModifier}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            event.preventDefault();\n            dispatch({ type: \"change_percent\", value: event.target.value });\n          }}\n        >\n          Percent Modifier\n        </LabelNumber>\n        <LabelNumber\n          value={character.flatDamage}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            event.preventDefault();\n            dispatch({ type: \"change_flat\", value: event.target.value });\n          }}\n        >\n          Flat Damage\n        </LabelNumber>\n      </CardItem>\n      <CardItem>\n        <Text fontSize=\"20px\" textAlign=\"center\">\n          + / - Charms\n        </Text>\n      </CardItem>\n      <CardFooter>\n        <Textarea\n          height=\"212px\"\n          resize=\"vertical\"\n          placeholder=\"[percent] [name]\"\n          value={character.buffsRaw}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch({ type: \"change_buffs\", value: event.target.value });\n          }}\n        />\n        <Button\n          onClick={() => dispatch({ type: \"change_buffs\", value: \"\" })}\n          mx=\"auto\"\n          w=\"40%\"\n        >\n          Clear\n        </Button>\n      </CardFooter>\n    </CardWrapper>\n  );\n};\n","import { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { SpellActions } from \"../hooks/UseSpell\";\n\ntype OptionMenu = {\n  dispatch: React.Dispatch<SpellActions>;\n  id: string;\n  deleteSpell: (id: string) => void;\n};\n\nexport const OptionMenu: React.FC<OptionMenu> = ({\n  dispatch,\n  id,\n  deleteSpell,\n}) => {\n  return (\n    <Menu>\n      <MenuButton>\n        <BsThreeDotsVertical aria-label=\"spell-options\" size=\"24px\" />\n      </MenuButton>\n      <MenuList>\n        <MenuItem onClick={() => dispatch({ type: \"add_base\" })}>\n          Add Base\n        </MenuItem>\n        <MenuItem onClick={() => dispatch({ type: \"toggle_enchantment\" })}>\n          Toggle Enchantment\n        </MenuItem>\n        <MenuItem onClick={() => dispatch({ type: \"toggle_increment\" })}>\n          Toggle Increment\n        </MenuItem>\n        <MenuItem onClick={() => deleteSpell(id)}>Delete</MenuItem>\n      </MenuList>\n    </Menu>\n  );\n};\n","export const parseNum = (num: string) => {\n  const value = parseInt(num);\n  return value ? value : 0;\n};\n","import React, { useEffect } from \"react\";\nimport { CharacterType, SpellType } from \"../types\";\nimport { calculateDamage } from \"../utils/calculateDamage\";\nimport { parseNum } from \"../utils/parseNum\";\n\nexport type SpellActions =\n  | {\n      type: \"change_name\";\n      name: string;\n    }\n  | {\n      type: \"change_base\";\n      index: number;\n      value: string;\n    }\n  | {\n      type: \"add_base\";\n    }\n  | {\n      type: \"update_character\";\n      value: CharacterType;\n    }\n  | {\n      type: \"toggle_enchantment\";\n    }\n  | {\n      type: \"change_enchantment\";\n      value: string;\n    }\n  | {\n      type: \"toggle_increment\";\n    }\n  | {\n      type: \"change_increment\";\n      pips?: string;\n      base?: string;\n    };\n\nconst dpsCalcAll = (newState: SpellType) => {\n  for (let i = 0; i < newState.bases.length; i++) {\n    dpsCalc(newState, i);\n  }\n};\n\nconst dpsCalc = (newState: SpellType, index: number) => {\n  const enchantment = newState.enchantment ? newState.enchantment : 0;\n  const increment = newState.increment\n    ? newState.increment.base * newState.increment.pips\n    : 0;\n  newState.damages[index] = calculateDamage(\n    newState.character,\n    newState.bases[index] + enchantment + increment\n  );\n  return newState;\n};\n\nconst spellReducer = (state: SpellType, action: SpellActions): SpellType => {\n  switch (action.type) {\n    case \"change_name\": {\n      return { ...state, name: action.name };\n    }\n    case \"add_base\": {\n      const newState = { ...state };\n      newState.bases.push(0);\n      newState.damages.push(0);\n      return newState;\n    }\n    case \"change_base\": {\n      const newState = { ...state };\n      newState.bases[action.index] = parseNum(action.value);\n\n      dpsCalc(newState, action.index);\n      return newState;\n    }\n    case \"update_character\": {\n      const newState = { ...state };\n      newState.character = action.value;\n\n      dpsCalcAll(newState);\n      return newState;\n    }\n    case \"toggle_enchantment\": {\n      const newState = { ...state };\n      if (newState.enchantment === undefined) {\n        newState.enchantment = 0;\n      } else {\n        newState.enchantment = undefined;\n      }\n\n      dpsCalcAll(newState);\n      return newState;\n    }\n    case \"change_enchantment\": {\n      const newState = { ...state };\n      newState.enchantment = parseNum(action.value);\n\n      dpsCalcAll(newState);\n      return newState;\n    }\n    case \"toggle_increment\": {\n      const newState = { ...state };\n      if (newState.increment === undefined) {\n        newState.increment = {\n          base: 0,\n          pips: 1,\n        };\n      } else {\n        newState.increment = undefined;\n      }\n\n      dpsCalcAll(newState);\n      return newState;\n    }\n    case \"change_increment\": {\n      const newState = { ...state };\n      console.log(action);\n      if (action.base !== undefined) {\n        newState.increment!.base = parseNum(action.base);\n      }\n      if (action.pips !== undefined) {\n        newState.increment!.pips = parseNum(action.pips);\n      }\n\n      dpsCalcAll(newState);\n      return newState;\n    }\n    default: {\n      throw new Error(\"Error\");\n    }\n  }\n};\n\nexport const useSpell = ({\n  character,\n  id,\n}: {\n  character: CharacterType;\n  id: string;\n}) => {\n  const initState: SpellType = {\n    id,\n    name: \"Untitled\",\n    bases: [0],\n    damages: [0],\n    character,\n  };\n  const hook = React.useReducer(spellReducer, initState);\n\n  // Update character when it changes\n  const [, dispatch] = hook;\n  useEffect(() => {\n    dispatch({ type: \"update_character\", value: character });\n  }, [character, dispatch]);\n\n  return hook;\n};\n","import { CharacterType } from \"../types\";\n\nexport const calculateDamage = (character: CharacterType, base: number) => {\n  const { percentModifier, flatDamage, buffs } = character;\n  let dam = Math.floor(\n    (1 + Number(percentModifier) / 100) * Number(base) + Number(flatDamage)\n  );\n  for (let i = 0; i < buffs.length; i++) {\n    dam *= 1 + buffs[i] / 100;\n    dam = Math.floor(dam);\n  }\n  return dam;\n};\n","import { Box, Flex, Input, Text } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { CharacterType } from \"../types\";\nimport { CardFooter } from \"./Card/CardFooter\";\nimport { CardHeader } from \"./Card/CardHeader\";\nimport { CardItem } from \"./Card/CardItem\";\nimport { CardWrapper } from \"./Card/CardWrapper\";\nimport { LabelNumber } from \"./LabelNumber\";\nimport { OptionMenu } from \"./OptionMenu\";\nimport { useSpell } from \"../hooks/UseSpell\";\n\ntype SpellCardProps = {\n  character: CharacterType;\n  id: string;\n  deleteSpell: (id: string) => void;\n};\n\nexport const SpellCard: React.FC<SpellCardProps> = ({\n  character,\n  id,\n  deleteSpell,\n}) => {\n  const [spell, dispatch] = useSpell({ character, id });\n\n  return (\n    <CardWrapper>\n      <CardHeader p=\"5px\">\n        <Flex>\n          <Flex>\n            <Input\n              textAlign=\"center\"\n              fontSize=\"20px\"\n              mr=\"5px\"\n              border=\"none\"\n              spellCheck=\"false\"\n              value={spell.name}\n              onFocus={(event: React.ChangeEvent<HTMLInputElement>) => {\n                event.target.select();\n              }}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                event.preventDefault();\n                dispatch({ type: \"change_name\", name: event.target.value });\n              }}\n            />\n          </Flex>\n          <Flex>\n            <OptionMenu dispatch={dispatch} deleteSpell={deleteSpell} id={id} />\n          </Flex>\n        </Flex>\n      </CardHeader>\n      {spell.enchantment !== undefined ? (\n        <CardItem>\n          <LabelNumber\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              dispatch({\n                type: \"change_enchantment\",\n                value: event.target.value,\n              });\n            }}\n            value={spell.enchantment}\n          >\n            Enchantment\n          </LabelNumber>\n        </CardItem>\n      ) : null}\n      {spell.increment !== undefined ? (\n        <CardItem>\n          <Flex>\n            <Box pr=\"10px\">\n              <LabelNumber\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch({\n                    type: \"change_increment\",\n                    pips: event.target.value,\n                  });\n                }}\n                value={spell.increment.pips}\n              >\n                Pips\n              </LabelNumber>\n            </Box>\n            <LabelNumber\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                dispatch({\n                  type: \"change_increment\",\n                  base: event.target.value,\n                });\n              }}\n              value={spell.increment.base}\n            >\n              Base\n            </LabelNumber>\n          </Flex>\n        </CardItem>\n      ) : null}\n      <CardFooter>\n        {spell.bases.map((value, index) => {\n          return (\n            <Flex key={index}>\n              <Box w=\"45%\">\n                <Input\n                  value={value}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    event.preventDefault();\n                    dispatch({\n                      type: \"change_base\",\n                      index,\n                      value: event.target.value,\n                    });\n                  }}\n                />\n              </Box>\n              <Flex ml=\"auto\" w=\"50%\">\n                <Text\n                  flexWrap=\"wrap\"\n                  wordBreak=\"break-word\"\n                  my=\"auto\"\n                  ml=\"auto\"\n                  fontSize=\"18px\"\n                  fontWeight=\"bold\"\n                >\n                  {spell.damages[index].toLocaleString(\"en\", {\n                    useGrouping: true,\n                  })}\n                </Text>\n              </Flex>\n            </Flex>\n          );\n        })}\n      </CardFooter>\n    </CardWrapper>\n  );\n};\n","import { Button } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { CardWrapper } from \"./Card/CardWrapper\";\ntype ToolbarCardProps = {};\n\nexport const ToolbarCard: React.FC<ToolbarCardProps> = () => {\n  return (\n    <CardWrapper>\n      <Button>Save</Button>\n    </CardWrapper>\n  );\n};\n","import React from \"react\";\nimport { CharacterType } from \"../types\";\nimport { parseBuffs } from \"../utils/parseBuffs\";\nimport { parseNum } from \"../utils/parseNum\";\n\nexport type CharacterActions =\n  | { type: \"change_percent\"; value: string }\n  | { type: \"change_flat\"; value: string }\n  | {\n      type: \"change_buffs\";\n      value: string;\n    };\n\nconst characterReducer = (\n  state: CharacterType,\n  action: CharacterActions\n): CharacterType => {\n  switch (action.type) {\n    case \"change_percent\": {\n      const newState = { ...state };\n      newState.percentModifier = parseNum(action.value);\n      return newState;\n    }\n    case \"change_flat\": {\n      const newState = { ...state };\n      newState.flatDamage = parseNum(action.value);\n\n      return newState;\n    }\n    case \"change_buffs\": {\n      const newState = { ...state };\n      newState.buffs = parseBuffs(action.value);\n      newState.buffsRaw = action.value;\n\n      return newState;\n    }\n    default: {\n      throw new Error(\"Error\");\n    }\n  }\n};\n\nexport const useCharacter = ({ reducer = characterReducer } = {}) => {\n  const initState: CharacterType = {\n    percentModifier: 0,\n    flatDamage: 0,\n    pierce: 0,\n    buffs: [],\n    buffsRaw: \"\",\n    shields: [],\n    sheldsRaw: \"\",\n  };\n  return React.useReducer(reducer, initState);\n};\n","export const parseBuffs = (text: string) => {\n  let buffs = text.split(\"\\n\");\n  return buffs.map((element) => {\n    const b = parseInt(element.split(\" \")[0]);\n    if (!b) {\n      return 0;\n    }\n    return b;\n  });\n};\n","import { Box, Flex, Heading, IconButton } from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { CardWrapper } from \"./components/Card/CardWrapper\";\nimport { MainCard } from \"./components/MainCard\";\nimport { SpellCard } from \"./components/SpellCard\";\nimport { ToolbarCard } from \"./components/ToolBarCard\";\nimport { useCharacter } from \"./hooks/UseCharacter\";\nimport { MAX_SPELLS } from \"./constants\";\n\nconst App: React.FC = () => {\n  const [character, setCharacter] = useCharacter();\n\n  const [spells, setSpells] = useState<string[]>([v4()]);\n\n  const deleteSpell = (id: string) => {\n    const index = spells.indexOf(id);\n    if (index !== -1) {\n      const newSpells = [];\n      for (let i = 0; i < spells.length; i++) {\n        if (index !== i) {\n          newSpells.push(spells[i]);\n        }\n      }\n\n      setSpells(newSpells);\n    }\n  };\n\n  const spellCards = spells.map((value) => {\n    return (\n      <Flex key={value} mb=\"auto\" pb=\"20px\" w=\"206px\" mr=\"20px\">\n        <SpellCard id={value} deleteSpell={deleteSpell} character={character} />\n      </Flex>\n    );\n  });\n\n  return (\n    <Box maxW=\"900px\" pl=\"20px\" mx=\"auto\">\n      <CardWrapper py=\"10px\" mr=\"20px\" my=\"20px\">\n        <Heading color=\"gray.900\" textAlign=\"center\" size=\"xl\">\n          Wiz Calculator 2\n        </Heading>\n      </CardWrapper>\n      <Box>\n        <Box float=\"left\" minW=\"181px\" w=\"181px\" mr=\"20px\">\n          <Box mb=\"20px\">\n            <MainCard character={character} dispatch={setCharacter} />\n          </Box>\n          <ToolbarCard />\n        </Box>\n        <Flex wrap=\"wrap\">\n          {spellCards}\n          <Flex w=\"216px\" mr=\"10px\">\n            {spells.length < MAX_SPELLS ? (\n              <IconButton\n                variantColor=\"blue\"\n                boxShadow=\"md\"\n                mx=\"auto\"\n                mt=\"25px\"\n                aria-label=\"Add Spellcard\"\n                icon=\"add\"\n                onClick={() => {\n                  const newSpells = [...spells];\n                  newSpells.push(v4());\n                  setSpells(newSpells);\n                }}\n              />\n            ) : null}\n          </Flex>\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { DefaultTheme, theme } from \"@chakra-ui/core\";\n\nexport const customTheme: DefaultTheme = {\n  ...theme,\n};\n\nexport default customTheme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { CSSReset, ThemeProvider } from \"@chakra-ui/core\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport customTheme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}